@page "/collections/{url}"
@model CollectionPage
@using System.Globalization

@{
	Layout = "_Layout";
	ViewData["Title"] = Model.CollectionLightPage.MetaData.Title;
	ViewData["Description"] = Model.CollectionLightPage.MetaData.Description;
	ViewData["Breadcrumb"] = await Component.InvokeAsync("BreadcrumbSummary", new[] { (url: "/", page: "Главная"),
(url: "/collections", page:"Коллекции"), (url: Model.CollectionLightPage.MetaData.Url,
page:Model.CollectionLightPage.Name) });
}

<div class="mt-13">
	<div class="col-12 border-b mb-per-4">
		<div class="row justify-content-between align-items-xl-center">
			<div class="col-12 col-xl-5">
				<div class="img-center__wrapper">
					<img class="img-responsive" src="@Model.CollectionLightPage.Img" alt="">
				</div>
			</div>
			<div class="col-md-12 col-xl-6 active">
				<h1 class="h1__caption mb-per-5">@Model.CollectionLightPage.Name</h1>
				<p class="p__caption mb-per-5">@Model.CollectionLightPage.Description</p>
			</div>
		</div>
	</div>
</div>

@if (@Model.CollectionLightPage is {AdditionalBlocks: not null })
{
	foreach (var item in Model.CollectionLightPage.AdditionalBlocks)
	{
		<div class="col-12 border-b mb-per-4">
			<div class="row justify-content-between align-items-xl-center">
				<div class="col-12 col-xl-5">
					<div class="img-center__wrapper">
						<img class="img-responsive" src="@item.Url" alt="@item.Caption">
					</div>
				</div>
				<div class="col-md-12 col-xl-6 active">
					<h1 class="h1__caption mb-per-5">@item.Caption</h1>
					<p class="p__caption mb-per-5">@item.Description</p>
				</div>
			</div>
		</div>
	}
}

@if (Model.LightsModelsPages is not null && Model.LightsModelsPages.Count > 0)
{
	<h3 class="h3__caption fw-bold">Модели из коллекции @Model.CollectionLightPage.Name</h3>
	<div class="catalog-list__wrapper border-b mb-per-2">
	@foreach (var p in Model.LightsModelsPages)
		{
			<a asp-page="ModelLightPage" class="product__wrapper"
		asp-route-collectionName="@Model.CollectionLightPage.Name.ToLower()" asp-route-modelName="@p.Name.ToLower()">
				<div class="">
					<div class="product-img__wrapper">
						<img class="img-center" src="@p.Img" alt="">
					</div>
					<div class="product-desc__wrapper">
						<p class="title-wrp product-price">@p.Name</p>
						<div class="product-price__wrapper">
							@if (@p.Products?.FirstOrDefault()?.Discount != null &&
									@p.Products?.FirstOrDefault()?.OldPrice != null)
							{
								<p class="tags-wrp"><s>@p.Products?.FirstOrDefault()?.OldPrice?.ToString("C0", new CultureInfo("ru-RU"))</s></p>
							}
							<p class="product-price">От: @p.Products?.Select(product => product.Price).Min().ToString("C0", new
						CultureInfo("ru-RU"))</p>
						</div>
					</div>
				</div>
			</a>
		}
	</div>
}

<div class="row mb-5">
	<h3 class="h3__caption fw-bold">Выбор модификации</h3>

	<div class="configurator-subproduct__wrapper mt-2 mb-5">
		<div class="configurator-subproduct row">
			<div class="col-12 col-xl-4">
				@if (Model.ProductId != null)
				{
					<div class="configurator-img__wrapper">
						<img id="configuratorSubproductImg" class="img-center" src="@Model.Product?.MainPhoto" alt="@Model.Product?.Name">
					</div>
				}
				else
				{
					<div class="configurator-img__wrapper">
						<img id="configuratorSubproductImg" class="img-center" 
						     src="@Model.CollectionLightPage.Products?.FirstOrDefault()?.MainPhoto" alt="@Model.CollectionLightPage.Products?.FirstOrDefault()?.Name">
					</div>
				}
			</div>
			<div class="col-12 col-xl-3 d-flex flex-column justify-content-center">
				@if (@Model.ProductId != null)
				{
					<h1 id="configuratorSubproductCaption" class="font-bold mb-2">@Model.ProductName</h1>

					<p id="configuratorProductPrice" class="h5 mb-4" price-value="@Model.Product!.Price.ToString()">
						Цена: @Model.Product.Price.ToString("C0", new CultureInfo("ru-RU"))</p>

					<a id="btn-arrow-3" class="arrow-3 mb-4 fw-bolder" asp-page="CardProduct"
					asp-route-ProductID="@Model.ProductId" asp-route-Url="@Model.Product.MetaData.Url">
						Подробнее о товаре
						<svg class="arrow-3-icon" xmlns="http://www.w3.org/2000/svg" width="32" height="32"
							viewBox="0 0 32 32">
							<g fill="none" stroke="#000" stroke-width="1.5" stroke-linejoin="round" stroke-miterlimit="10">
								<circle class="arrow-3-iconcircle" cx="16" cy="16" r="15.12"></circle>
								<path class="arrow-3-icon--arrow" d="M16.14 9.93L22.21 16l-6.07 6.07M8.23 16h13.98">
								</path>
							</g>
						</svg>
					</a>
				}
				else
				{
					<h1 id="configuratorSubproductCaption" class="font-bold text-muted">@Model.CollectionLightPage.Name
					</h1>
					@if (Model.Products?.Count() > 0)
					{
						<p id="configuratorProductPrice" class="h5 text-muted mb-4"
							price-value="@Model.Products.Select(p => p.Price).Min().ToString()">
							Цена: @Model.Products.Select(p => p.Price).Min().ToString("C0", new CultureInfo("ru-RU"))</p>
					}

					<a id="btn-arrow-3" class="arrow-3 disabled mb-4 fw-bolder" href="#">
						Подробнее о товаре
						<svg class="arrow-3-icon disabled" xmlns="http://www.w3.org/2000/svg" width="32" height="32"
							viewBox="0 0 32 32">
							<g fill="none" stroke="#000" stroke-width="1.5" stroke-linejoin="round" stroke-miterlimit="10">
								<circle class="arrow-3-iconcircle" cx="16" cy="16" r="15.12"></circle>
								<path class="arrow-3-icon--arrow" d="M16.14 9.93L22.21 16l-6.07 6.07M8.23 16h13.98">
								</path>
							</g>
						</svg>
					</a>
				}
				@if (@Model.ProductId != null)
				{
					<form id="ProductID" class="product-card__add addToCart" asp-page="/Cart" method="post">
						<div class="number">
							<span class="minus">-</span>
							<input id="quantity-count" class="quantity-count" name="quantityProducts" type="number"
								value="1" />
							<span class="plus">+</span>
						</div>
						<input id="configuratorProductId" type="hidden" name="ProductID" asp-for="ProductId" />
						<input type="hidden" name="returnUrl" value="@ViewContext.HttpContext.Request.PathAndQuery()" />
						<button id="configuratorAddToCart" type="submit" class="addToCart__product-card form-catalog__text">
							Добавить в корзину
						</button>
					</form>
				}
				else
				{
					<form id="ProductID" class="product-card__add addToCart" asp-page="/Cart" method="post">
						<div class="number">
							<span class="minus">-</span>
							<input id="quantity-count" class="quantity-count" name="quantityProducts" type="number"
								value="1" />
							<span class="plus">+</span>
						</div>
						<input id="configuratorProductId" type="hidden" asp-for="ProductId" />
						<input type="hidden" name="returnUrl" value="@ViewContext.HttpContext.Request.PathAndQuery()" />
						<button id="configuratorAddToCart" type="submit" disabled
							class="addToCart__product-card-disabled form-catalog__text">
							Добавить в корзину
						</button>
					</form>
				}
			</div>
		</div>
	</div>

	<form id="collectionPageForm" method="get" asp-page="/CollectionPage" asp-page-handler="Params">
		<div class="row configurator-form__wrapper">
			<div class="col-12 col-xl-3 col-xxl-2 col-lg-4 mb-3">
			@if (Model.CollectionLightPage is {ModelLights: not null } && Model.CollectionLightPage.ModelLights.Any())
			{
				@if ((Model.Products?.Select(p => p.ModelLight.Name).Distinct()).Any() &&
						Model.CollectionLightPage.Products?.Select(p => p.ModelLight?.Name).Distinct().Count() != 1)
				{
					<div class="configurator__wrapper select-model-name">
						<h4 class="configurator__caption">Модель:</h4>
						<div id="result"></div>
						<div class="configurator__btns">
							<input type="hidden" id="configuratorModelName" name="modelName" value="">
							<div class="selectModelsProduct d-flex flex-column" id="selectModelsProduct">
								@foreach (var m in Model.CollectionLightPage.Products?.Select(p =>
										p.ModelLight.Name).Distinct())
								{
									@if (Model.Products.Select(p => p.ModelLight?.Name).Distinct().Any(p => p == m))
									{
										<button class="radio-btn" type="button" name="@m" data-value="@m">@m</button>
									}
									else
									{
										<button class="radio-btn" disabled type="button" name="@m" data-value="@m">@m</button>
									}
								}
							</div>
						</div>
					</div>
				}
				else
				{
					<div class="configurator__wrapper select-model-name active">
						<h4 class="configurator__caption">Модель:</h4>
						<div id="result"></div>
						<div class="configurator__btns">
							<input type="hidden" id="configuratorModelName" name="modelName"
								value="@Model.Products.Select(p => p.ModelLight?.Name).Distinct().FirstOrDefault()">
							<div class="selectModelsProduct d-flex flex-column" id="selectModelsProduct">
								@foreach (var m in Model.CollectionLightPage.Products?.Select(p =>
										p.ModelLight.Name).Distinct())
								{
									@if (m == Model.Products.Select(p => p.ModelLight.Name).Distinct().FirstOrDefault())
									{
										<button class="radio-btn active" type="button" name="@m" data-value="@m">@m</button>
									}
									else
									{
										<button class="radio-btn" disabled type="button" name="@m" data-value="@m">@m</button>
									}
								}
							</div>
						</div>
					</div>
				}
			}
			else
			{
				<div class="configurator__wrapper select-model-name active">
					<h4 class="configurator__caption">Модель:</h4>
					<div id="result"></div>
					<div class="configurator__btns">
						<input type="hidden" id="configuratorModelName" name="modelName"
							value="">
						<div class="selectModelsProduct d-flex flex-column" id="selectModelsProduct">
							<button class="radio-btn active" type="button" name="-"
								data-value="">-</button>
						</div>
					</div>
				</div>
			}
			</div>

			<div class="col-12 col-xl-3 col-xxl-2 col-lg-4 mb-3">
				@if (Model.Products != null &&
				     Model.Products.Select(p => p.Color).Distinct().Any() &&
				     Model.CollectionLightPage.Products?.Select(p => p.Color).Distinct().Count() != 1)
				{
					<div class="configurator__wrapper select-color-product">
						<h4 class="configurator__caption">Цвет:</h4>
						<div class="configurator__btns">
							<input type="hidden" id="configuratorColorProduct" name="colorProduct" value="">
							<div class="selectColorsProduct d-flex flex-column" id="selectColorsProduct">
								@foreach (var color in Model.CollectionLightPage.Products?.Select(p => p.Color).Distinct()!)
								{

									@if (@Model.Products.Select(p => p.Color).Distinct().Any(p => p == color))
									{
										<button class="radio-btn" type="button" data-value="@color" name="@color">@color</button>
									}
									else
									{
										<button class="radio-btn" disabled type="button" data-value="@color"
											name="@color">@color</button>
									}
								}
							</div>
						</div>
					</div>
				}
				else
				{
					<div class="configurator__wrapper select-color-product active">
						<h4 class="configurator__caption">Цвет:</h4>
						<div class="configurator__btns">
							<input type="hidden" id="configuratorColorProduct" name="colorProduct"
								value="@Model.Products?.Select(p => p.Color).Distinct().FirstOrDefault()">
							<div class="selectColorsProduct d-flex flex-column" id="selectColorsProduct">
								@foreach (var color in Model.CollectionLightPage.Products?.Select(p => p.Color).Distinct()!)
								{

									@if (color == Model.Products?.Select(p => p.Color).Distinct().FirstOrDefault())
									{
										<button class="radio-btn active" type="button" data-value="@color"
											name="@color">@color</button>
									}
									else
									{
										<button class="radio-btn" disabled type="button" data-value="@color"
											name="@color">@color</button>
									}
								}

							</div>
						</div>
					</div>
				}
			</div>
			<div class="col-12 col-xl-3 col-xxl-2 col-lg-4 mb-3">
				@if ((Model.Products?.Select(p => p.Size).Distinct()!).Any() &&
						Model.CollectionLightPage.Products.Select(p => p.Size).Distinct().Count() != 1)
				{
					<div class="configurator__wrapper select-size-product">
						<h4 class="configurator__caption">Размер:</h4>
						<div class="configurator__btns">
							<input type="hidden" id="configuratorSizeProduct" name="size" value="">
							<div class="selectSizeProduct d-flex flex-column" id="selectSizeProduct">
								@foreach (var size in Model.CollectionLightPage.Products.Select(p => p.Size).Distinct())
								{
									@if (Model.Products.Select(p => p.Size).Distinct().Any(p => p == size))
									{
										<button class="radio-btn" type="button" data-value="@size" name="@size">@size мм</button>
									}
									else
									{
										<button class="radio-btn" disabled type="button" data-value="@size"
											name="@size">@size мм</button>
									}
								}
							</div>
						</div>
					</div>
				}
				else
				{
					<div class="configurator__wrapper select-size-product active">
						<h4 class="configurator__caption">Размер:</h4>
						<div class="configurator__btns">
							<input type="hidden" id="configuratorSizeProduct" name="size"
								value="@Model.Products?.Select(p => p.Size).Distinct().FirstOrDefault()">
							<div class="selectSizeProduct d-flex flex-column" id="selectSizeProduct">
								@foreach (var size in Model.CollectionLightPage.Products.Select(p => p.Size).Distinct())
								{
									@if (size ==@Model.Products?.Select(p => p.Size).Distinct().FirstOrDefault())
									{
										<button class="radio-btn active" type="button" data-value="@size"
											name="@size">@size мм</button>
									}
									else
									{
										<button class="radio-btn" disabled type="button" data-value="@size"
											name="@size">@size мм</button>
									}
								}
							</div>
						</div>
					</div>
				}
			</div>
			<div class="col-12 col-xl-3 col-lg-4 col-xxl-2 mb-3">
				@if ((Model.Products?.Select(p => p.LightSource).Distinct()!).Any() &&
						Model.CollectionLightPage.Products.Select(p => p.LightSource).Distinct().Count() != 1)
				{
					<div class="configurator__wrapper select-light-source-product">
						<h4 class="configurator__caption">Источник света:</h4>
						<div class="configurator__btns">
							<input type="hidden" id="configuratorLightSourceProduct" name="lightSource" value="">
							<div class="selectLightSourceProduct d-flex flex-column" id="selectLightSourceProduct">
								@foreach (var lightSource in @Model.CollectionLightPage.Products.Select(p =>
										p.LightSource).Distinct())
								{
									@if (Model.Products.Select(p => p.LightSource).Distinct().Any(p => p == lightSource))
									{
										<button class="radio-btn" type="button" data-value="@lightSource"
											name="@lightSource">@lightSource</button>
									}
									else
									{
										<button class="radio-btn" disabled type="button" data-value="@lightSource"
											name="@lightSource">@lightSource</button>
									}
								}
							</div>
						</div>
					</div>
				}
				else
				{
					<div class="configurator__wrapper select-light-source-product active">
						<h4 class="configurator__caption">Источник света:</h4>
						<div class="configurator__btns">
							<input type="hidden" id="configuratorLightSourceProduct" name="lightSource"
								value="@Model.Products?.Select(p => p.LightSource).Distinct().FirstOrDefault()">
							<div class="selectLightSourceProduct d-flex flex-column" id="selectLightSourceProduct">
								@foreach (var lightSource in @Model.CollectionLightPage.Products.Select(p =>
										p.LightSource).Distinct())
								{
									@if (lightSource == Model.Products?.Select(p => p.LightSource).Distinct().FirstOrDefault())
									{
										<button class="radio-btn active" type="button" data-value="@lightSource"
											name="@lightSource">@lightSource</button>
									}
									else
									{
										<button class="radio-btn" disabled type="button" data-value="@lightSource"
											name="@lightSource">@lightSource</button>
									}
								}
							</div>
						</div>
					</div>
				}
			</div>
			<div class="col-12 col-xl-3 col-xxl-2 col-lg-4 mb-3">
				@if (Model.Products.Select(p => p.PowerW).Distinct().Any() &&
						@Model.CollectionLightPage.Products.Select(p => p.PowerW).Distinct().Count() != 1)
				{
					<div class="configurator__wrapper select-power-w-product">
						<h4 class="configurator__caption">Мощность:</h4>
						<div class="configurator__btns">
							<input type="hidden" id="configuratorPowerWProduct" name="powerW" value="">
							<div class="selectPowerWProduct d-flex flex-column" id="selectPowerWProduct">
								@foreach (var powerW in @Model.CollectionLightPage.Products.Select(p =>
										p.PowerW).Distinct())
								{

									@if (Model.Products.Select(p => p.PowerW).Distinct().Any(p => p == powerW))
									{
										<button class="radio-btn" type="button" data-value="@powerW" name="@powerW">@powerW W</button>
									}
									else
									{
										<button class="radio-btn" disabled type="button" data-value="@powerW"
											name="@powerW">@powerW W</button>
									}
								}
							</div>
						</div>
					</div>
				}
				else
				{
					<div class="configurator__wrapper select-power-w-product active">
						<h4 class="configurator__caption">Мощность:</h4>
						<div class="configurator__btns">
							<input type="hidden" id="configuratorPowerWProduct" name="powerW"
								value="@Model.Products.Select(p => p.PowerW).Distinct().FirstOrDefault()">
							<div class="selectPowerWProduct d-flex flex-column" id="selectPowerWProduct">
								@foreach (var powerW in @Model.CollectionLightPage.Products.Select(p =>
										p.PowerW).Distinct())
								{

									@if (powerW == @Model.Products.Select(p => p.PowerW).Distinct().FirstOrDefault())
									{
										<button class="radio-btn active" type="button" data-value="@powerW"
											name="@powerW">@powerW W</button>
									}
									else
									{
										<button class="radio-btn" disabled type="button" data-value="@powerW"
											name="@powerW">@powerW W</button>
									}
								}
							</div>
						</div>
					</div>
				}
			</div>

			<div class="col-12 col-xl-3 col-xxl-2 col-lg-4 mb-3">
				@if (Model.Products.Select(p => p.AddControl).Distinct().Any() &&
						Model.CollectionLightPage.Products.Select(p => p.AddControl).Distinct().Count() != 1)
				{
					<div class="configurator__wrapper select-dim-product">
						<h4 class="configurator__caption">Управление:</h4>
						<div class="configurator__btns">
							<input type="hidden" id="configuratorDimProduct" name="dim" value="">
							<div class="selectDimProduct d-flex flex-column" id="selectDimProduct">
								@foreach (var dim in @Model.CollectionLightPage.Products.Select(p =>
										p.AddControl).Distinct())
								{
									@if (Model.Products.Select(p => p.AddControl).Distinct().Any(p => p == dim))
									{
										<button class="radio-btn" type="button" data-value="@dim" name="@dim">@dim</button>
									}
									else
									{
										<button class="radio-btn" disabled type="button" data-value="@dim" name="@dim">@dim</button>
									}
								}
							</div>
						</div>
					</div>
				}
				else
				{
					<div class="configurator__wrapper select-dim-product active">
						<h4 class="configurator__caption">Управление:</h4>
						<div class="configurator__btns">
							<input type="hidden" id="configuratorDimProduct" name="dim"
								value="@Model.Products.Select(p => p.AddControl).Distinct().FirstOrDefault()">
							<div class="selectDimProduct d-flex flex-column" id="selectDimProduct">
								@foreach (var dim in @Model.CollectionLightPage.Products.Select(p =>
										p.AddControl).Distinct())
								{

									@if (dim == @Model.Products.Select(p => p.AddControl).Distinct().FirstOrDefault())
									{
										<button class="radio-btn active" type="button" data-value="@dim" name="@dim">@dim</button>
									}
									else
									{
										<button class="radio-btn" disabled type="button" data-value="@dim" name="@dim">@dim</button>
									}
								}
							</div>
						</div>
					</div>
				}
			</div>
		
			<div class="col-12 mt-2">
				<button id="clearConfigurator" class="form-catalog__text cart__btn-checkout d-none"
					type="button">Сбросить настройки</button>
			</div>
		</div>
	</form>
</div>

<script src="~/js/configurator.js" asp-append-version="true" defer></script>